// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  address   String
  password  String
  role      UserRole @default(NORMAL_USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  ratings   Rating[]
  ownedStore Store?

  @@map("users")
}

model Store {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  ownerId   String?  @unique
  owner     User?    @relation(fields: [ownerId], references: [id])
  ratings   Rating[]

  @@map("stores")
}

model Rating {
  id        String   @id @default(cuid())
  rating    Int      // 1-5
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  storeId   String
  store     Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)

  @@unique([userId, storeId])
  @@map("ratings")
}

enum UserRole {
  SYSTEM_ADMIN
  NORMAL_USER
  STORE_OWNER
}